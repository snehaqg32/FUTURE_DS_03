# -*- coding: utf-8 -*-
"""Task3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/177sTj6_svYOwsdVpuhq-326etaSaQO_-
"""

import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd
import numpy as np

df= pd.read_csv("/content/student_feedback.csv")

df.head()

df.info()

df.columns = ["Index", "Student_ID", "SUbject_Expertise", "Concept_Clarity", "Presentations", "Assignment_Difficulty", "Doubt_Solving", "Course_Structure", "Student_Support", "Course_Recommendation"]

df.drop(columns = ["Index"], inplace = True)

df.describe()

plt.figure(figsize=(10, 6))
sns.barplot(data=df.mean().reset_index(), x="index", y=0, palette="coolwarm")
plt.xticks(rotation=45)
plt.ylabel("Average Rating (1-10)")
plt.title("Average Rating per Feedback Categary")

plt.figure(figsize=(10,6))
sns.heatmap(df.corr(), annot=True, cmap="Purples", fmt=".2f")
plt.title("Correlation Between Feedback Metrices")
plt.show()

plt.figure(figsize = (10,6))
for column in df.columns[1:]:
  sns.kdeplot(df[column], label=column)
plt.title("Rating Distribution per Aspect")
plt.xlabel("Rating (1-10)")
plt.legend()
plt.show()

plt.figure(figsize=(10,6))
sns.violinplot(data=df.iloc[:, 1:], palette="Set2", inner="point")
plt.xticks(rotation=45)
plt.title("Rating by Category")
plt.ylabel("Rating")
plt.tight_layout()
plt.show()

categories = df.columns[1:]
values = df[categories].mean().tolist()
angles = np.linspace(0, 2 * np.pi, len(categories), endpoint=False).tolist()
values += values[:1]
angles += angles[:1]

fig, ax = plt.subplots(figsize=(11,11), subplot_kw=dict(polar=True))
ax.plot(angles, values, color='blue', linewidth=2)
ax.fill(angles, values, color='blue', alpha=0.25)

ax.set_xticks(angles[:-1])
ax.set_xticklabels(categories, fontsize= 10)
ax.set_title("Average Feedback per Category")
plt.show()

rating_avg = df.mean().sort_values(ascending = False)
rating_avg

df_long = df.iloc[:, 1].reset_index().melt(id_vars="index", var_name="Category", value_name= "Rating")
df_long.rename(columns={"index" : "Student Index"}, inplace=True)

plt.figure(figsize=(12,6))
sns.stripplot(data=df_long, x="Category", y="Rating", hue="Category", dodge=False, alpha=0.5, jitter=0.3, palette="Set2")
plt.title("Student Feedback by Category")
plt.xticks(rotation=45)
plt.xlabel("Feedback Category")
plt.ylabel("Rating")
plt.legend()
plt.tight_layout()
plt.show()

sns.pairplot(df.iloc[:, 1:], corner=True)